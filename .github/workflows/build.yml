name: Build
on:
  push:
     branches:
       - dev
       - master

env:
  IMAGE: zksync
  REGISTRY_HOSTNAME: gcr.io
  GKE_ZONE: europe-west1-b	
  GKE_CLUSTER: colexi-dev
  DEPLOYMENT_NAME_SERVER: zksync-server
  DEPLOYMENT_NAME_PROVER: zksync-prover
  ERC721_ADDRESS_DEV: '0x5E6D086F5eC079ADFF4FB3774CDf3e8D6a34F7E9'
  ERC721_ADDRESS_TEST: '0x7D45A3E9D1A37A4Ccf79a2599e9E1285feC06F5B'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Set IMAGE_TAG
        run: |
          export IMAGE_TAG="${GITHUB_REF##*/}"
          echo "::set-env name=IMAGE_TAG::$IMAGE_TAG"

      - name: Set ERC721_ADDRESS for dev environment
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "::set-env name=ERC721_ADDRESS::$ERC721_ADDRESS_DEV"

      - name: Set ERC721_ADDRESS for test environment
        if: github.ref == 'refs/heads/master'
        run: |
          echo "::set-env name=ERC721_ADDRESS::$ERC721_ADDRESS_TEST"

      - name: checkout
        uses: actions/checkout@v2

      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      - name: Setup docker
        run: gcloud auth configure-docker

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Generate TokenInit.sol
        run: |
          echo "pragma solidity ^0.5.0;

            contract TokenDeployInit {
              function getTokens() internal pure returns (address[] memory) {
                  address[] memory tokens = new address[](0);
                  return tokens;
              }
          
              function getERC721Address() internal pure returns (address) {
                  return $ERC721_ADDRESS;
              }
          }" > ./contracts/TokenInit.sol

      - name: Build contracts
        run: |
          npm install ethereum-waffle@2.0.x openzeppelin-solidity@2.3.x
          ./node_modules/.bin/waffle .waffle.ci.json
        working-directory: ./contracts
  
      - name: Build docker image
        run: docker build -t $REGISTRY_HOSTNAME/${{ secrets.GKE_PROJECT }}/$IMAGE:$IMAGE_TAG .

      - name: Publish to GCR
        run: docker push $REGISTRY_HOSTNAME/${{ secrets.GKE_PROJECT }}/$IMAGE:$IMAGE_TAG
    
  deploy_dev:
    name: Deploy in DEV environment
    if: github.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project ${{ secrets.GKE_PROJECT }}
          kubectl apply -f manifests/dev/configmap.yml
          kubectl apply -f manifests/dev/secret.yml
          kubectl apply -f manifests/dev/service.yml
          kubectl apply -f manifests/dev/deployment.yml
          kubectl rollout restart --namespace colexi-dev deployment/$DEPLOYMENT_NAME_SERVER
          kubectl rollout status --namespace colexi-dev deployment/$DEPLOYMENT_NAME_SERVER
          kubectl rollout restart --namespace colexi-dev deployment/$DEPLOYMENT_NAME_PROVER
          kubectl rollout status --namespace colexi-dev deployment/$DEPLOYMENT_NAME_PROVER
      
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_USERNAME: 'GitHub'
          SLACK_ICON: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: 'GitHub Actions notifications for colexi-rollup'

  deploy_test:
    name: Deploy in TEST environment
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project ${{ secrets.GKE_PROJECT }}
          kubectl apply -f manifests/test/configmap.yml
          kubectl apply -f manifests/test/secret.yml
          kubectl apply -f manifests/test/service.yml
          kubectl apply -f manifests/test/deployment.yml
          kubectl rollout restart --namespace colexi-test deployment/$DEPLOYMENT_NAME_SERVER
          kubectl rollout status --namespace colexi-test deployment/$DEPLOYMENT_NAME_SERVER
          kubectl rollout restart --namespace colexi-test deployment/$DEPLOYMENT_NAME_PROVER
          kubectl rollout status --namespace colexi-test deployment/$DEPLOYMENT_NAME_PROVER